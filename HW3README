CS 536
Assignment 3 - Bi-cubic Bezier Patch

The program provided here takes in a list of control points provided by a file and outputs, to standard
out in OpenInventor format, the control points and an approximated mesh surface for the bi-cubic Bezier
patch defined by those control points.

The program was written in C on Ubuntu Linux and compiled using gcc. The exact commands to do the
compilation can be seen in the Makefile. To simply compile using the Makefile, type "make", which will
create the CG_hw2 executable. The individual modules can be compiled individually as well, with
different targets in the Makefile producing different object files in the bin/ directory. To clean up
the directory, type "make clean". This will remove the executable and the files in bin/.
output/ as well.

Note that the main function is located within src/hw3_main.c.

The options are as follows. Note that none of them are required.
	-f filename
	The name of the input file with with the control points; default value "patchPoints.txt". The
	input file must have the format
		x1 y1 z1
		x2 y2 z2
		...
		x16 y16 z16
	where each line has three floating point numbers seperated by spaces, with the last number being
	immediately followed by a newline (including the last line in the file). Each line defines a
	control point in the bi-cubic Bezier patch. Note that the file must be 16 lines long because the
	program supports only bi-cubic, and not arbitrary, Bezier patches. Also note that the (i, j)
	ordering of the points is treated as follows, per line:
		(0, 0)
		(1, 0)
		(2, 0)
		(3, 0)
		(0, 1)
		...
		(0, 3)
		(1, 3)
		(2, 3)
		(3, 3)

	-u number of u points
	The number of points to be used in the u direction when evaluating the Bezier patch; default
	value 11.

	-v number of v points
	The number of points to be used in the v direction when evaluating the Bezier patch; default
	value 11.

	-r radius
	The size of the radius to be used when drawing the control points of the Bezier curve; default
	value 0.1.

	-F
	Indicates that the output mesh should be flat-shaded (default)

	-S
	Indicates that the output mesh should be smooth-shaded (flat-shaded by default)
